// source: query_goods.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.goods.QueryGoodsRequest', null, global);
goog.exportSymbol('proto.goods.QueryGoodsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goods.QueryGoodsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.goods.QueryGoodsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goods.QueryGoodsRequest.displayName = 'proto.goods.QueryGoodsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.goods.QueryGoodsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.goods.QueryGoodsResponse.repeatedFields_, null);
};
goog.inherits(proto.goods.QueryGoodsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.goods.QueryGoodsResponse.displayName = 'proto.goods.QueryGoodsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goods.QueryGoodsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.goods.QueryGoodsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goods.QueryGoodsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goods.QueryGoodsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    goodsType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    priceLow: jspb.Message.getFieldWithDefault(msg, 5, 0),
    priceHigh: jspb.Message.getFieldWithDefault(msg, 6, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 7, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goods.QueryGoodsRequest}
 */
proto.goods.QueryGoodsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goods.QueryGoodsRequest;
  return proto.goods.QueryGoodsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goods.QueryGoodsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goods.QueryGoodsRequest}
 */
proto.goods.QueryGoodsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.goods.GoodsType} */ (reader.readEnum());
      msg.setGoodsType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceLow(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriceHigh(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goods.QueryGoodsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goods.QueryGoodsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goods.QueryGoodsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goods.QueryGoodsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGoodsType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPriceLow();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPriceHigh();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.goods.QueryGoodsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional GoodsType goods_type = 2;
 * @return {!proto.goods.GoodsType}
 */
proto.goods.QueryGoodsRequest.prototype.getGoodsType = function() {
  return /** @type {!proto.goods.GoodsType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.goods.GoodsType} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setGoodsType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.goods.QueryGoodsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.goods.QueryGoodsRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 price_low = 5;
 * @return {number}
 */
proto.goods.QueryGoodsRequest.prototype.getPriceLow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setPriceLow = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 price_high = 6;
 * @return {number}
 */
proto.goods.QueryGoodsRequest.prototype.getPriceHigh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setPriceHigh = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 offset = 7;
 * @return {number}
 */
proto.goods.QueryGoodsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 limit = 8;
 * @return {number}
 */
proto.goods.QueryGoodsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.goods.QueryGoodsRequest} returns this
 */
proto.goods.QueryGoodsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.goods.QueryGoodsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.goods.QueryGoodsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.goods.QueryGoodsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.goods.QueryGoodsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goods.QueryGoodsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseResp: (f = msg.getBaseResp()) && common_pb.BaseResp.toObject(includeInstance, f),
    goodsListList: jspb.Message.toObjectList(msg.getGoodsListList(),
    common_pb.Goods.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.goods.QueryGoodsResponse}
 */
proto.goods.QueryGoodsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.goods.QueryGoodsResponse;
  return proto.goods.QueryGoodsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.goods.QueryGoodsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.goods.QueryGoodsResponse}
 */
proto.goods.QueryGoodsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.BaseResp;
      reader.readMessage(value,common_pb.BaseResp.deserializeBinaryFromReader);
      msg.setBaseResp(value);
      break;
    case 2:
      var value = new common_pb.Goods;
      reader.readMessage(value,common_pb.Goods.deserializeBinaryFromReader);
      msg.addGoodsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.goods.QueryGoodsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.goods.QueryGoodsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.goods.QueryGoodsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.goods.QueryGoodsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseResp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.BaseResp.serializeBinaryToWriter
    );
  }
  f = message.getGoodsListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.Goods.serializeBinaryToWriter
    );
  }
};


/**
 * optional BaseResp base_resp = 1;
 * @return {?proto.goods.BaseResp}
 */
proto.goods.QueryGoodsResponse.prototype.getBaseResp = function() {
  return /** @type{?proto.goods.BaseResp} */ (
    jspb.Message.getWrapperField(this, common_pb.BaseResp, 1));
};


/**
 * @param {?proto.goods.BaseResp|undefined} value
 * @return {!proto.goods.QueryGoodsResponse} returns this
*/
proto.goods.QueryGoodsResponse.prototype.setBaseResp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.goods.QueryGoodsResponse} returns this
 */
proto.goods.QueryGoodsResponse.prototype.clearBaseResp = function() {
  return this.setBaseResp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.goods.QueryGoodsResponse.prototype.hasBaseResp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Goods goods_list = 2;
 * @return {!Array<!proto.goods.Goods>}
 */
proto.goods.QueryGoodsResponse.prototype.getGoodsListList = function() {
  return /** @type{!Array<!proto.goods.Goods>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Goods, 2));
};


/**
 * @param {!Array<!proto.goods.Goods>} value
 * @return {!proto.goods.QueryGoodsResponse} returns this
*/
proto.goods.QueryGoodsResponse.prototype.setGoodsListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.goods.Goods=} opt_value
 * @param {number=} opt_index
 * @return {!proto.goods.Goods}
 */
proto.goods.QueryGoodsResponse.prototype.addGoodsList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.goods.Goods, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.goods.QueryGoodsResponse} returns this
 */
proto.goods.QueryGoodsResponse.prototype.clearGoodsListList = function() {
  return this.setGoodsListList([]);
};


goog.object.extend(exports, proto.goods);
